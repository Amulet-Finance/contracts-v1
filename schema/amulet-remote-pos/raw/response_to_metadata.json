{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Metadata",
  "type": "object",
  "required": [
    "available_to_claim",
    "delegated",
    "ibc_deposit_asset",
    "inflight_delegation",
    "inflight_deposit",
    "inflight_fee_payable",
    "inflight_rewards_receivable",
    "inflight_unbond",
    "max_ibc_msg_count",
    "minimum_unbond_interval",
    "msg_issued_count",
    "msg_success_count",
    "pending_deposit",
    "pending_unbond",
    "total_actual_unbonded",
    "total_expected_unbonded"
  ],
  "properties": {
    "available_to_claim": {
      "$ref": "#/definitions/Uint128"
    },
    "delegated": {
      "$ref": "#/definitions/Uint128"
    },
    "delegations_icq": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "ibc_deposit_asset": {
      "type": "string"
    },
    "inflight_delegation": {
      "$ref": "#/definitions/Uint128"
    },
    "inflight_deposit": {
      "$ref": "#/definitions/Uint128"
    },
    "inflight_fee_payable": {
      "$ref": "#/definitions/Uint128"
    },
    "inflight_rewards_receivable": {
      "$ref": "#/definitions/Uint128"
    },
    "inflight_unbond": {
      "$ref": "#/definitions/Uint128"
    },
    "last_main_ica_balance_icq_update": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "last_reconcile_height": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "last_unbond_timestamp": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "last_used_main_ica_balance_icq_update": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "main_ica_address": {
      "type": [
        "string",
        "null"
      ]
    },
    "main_ica_balance_icq": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "max_ibc_msg_count": {
      "type": "integer",
      "format": "uint",
      "minimum": 0.0
    },
    "minimum_unbond_interval": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "msg_issued_count": {
      "type": "integer",
      "format": "uint",
      "minimum": 0.0
    },
    "msg_success_count": {
      "type": "integer",
      "format": "uint",
      "minimum": 0.0
    },
    "pending_deposit": {
      "$ref": "#/definitions/Uint128"
    },
    "pending_unbond": {
      "$ref": "#/definitions/Uint128"
    },
    "rewards_ica_address": {
      "type": [
        "string",
        "null"
      ]
    },
    "rewards_ica_balance_icq": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "total_actual_unbonded": {
      "$ref": "#/definitions/Uint128"
    },
    "total_expected_unbonded": {
      "$ref": "#/definitions/Uint128"
    },
    "unbonding_ack_count": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "unbonding_issued_count": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
