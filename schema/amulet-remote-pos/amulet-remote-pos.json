{
  "contract_name": "amulet-remote-pos",
  "contract_version": "1.0.1",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "connection_id",
      "estimated_block_interval_seconds",
      "fee_bps_block_increment",
      "fee_payment_cooldown_blocks",
      "icq_update_interval",
      "initial_validator_set",
      "initial_validator_weights",
      "interchain_tx_timeout_seconds",
      "max_fee_bps",
      "max_unbonding_entries",
      "max_validators_per_delegations_icq",
      "remote_denom",
      "remote_denom_decimals",
      "transfer_in_channel",
      "transfer_in_timeout_seconds",
      "transfer_out_channel",
      "transfer_out_timeout_seconds",
      "unbonding_period"
    ],
    "properties": {
      "connection_id": {
        "type": "string"
      },
      "estimated_block_interval_seconds": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "fee_bps_block_increment": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "fee_payment_cooldown_blocks": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "icq_update_interval": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "initial_validator_set": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "initial_validator_weights": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      },
      "interchain_tx_timeout_seconds": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "max_fee_bps": {
        "type": "integer",
        "format": "uint32",
        "minimum": 0.0
      },
      "max_unbonding_entries": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "max_validators_per_delegations_icq": {
        "type": "integer",
        "format": "uint8",
        "minimum": 0.0
      },
      "remote_denom": {
        "type": "string"
      },
      "remote_denom_decimals": {
        "type": "integer",
        "format": "uint32",
        "minimum": 0.0
      },
      "transfer_in_channel": {
        "type": "string"
      },
      "transfer_in_timeout_seconds": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "transfer_out_channel": {
        "type": "string"
      },
      "transfer_out_timeout_seconds": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "unbonding_period": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "anyOf": [
      {
        "$ref": "#/definitions/ExecuteMsg"
      },
      {
        "$ref": "#/definitions/ExecuteMsg2"
      },
      {
        "$ref": "#/definitions/StrategyExecuteMsg"
      }
    ],
    "definitions": {
      "ExecuteMsg": {
        "oneOf": [
          {
            "description": "Transfer admin role to a new address",
            "type": "object",
            "required": [
              "transfer_admin_role"
            ],
            "properties": {
              "transfer_admin_role": {
                "type": "object",
                "required": [
                  "next_admin"
                ],
                "properties": {
                  "next_admin": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Complete admin role transferral",
            "type": "object",
            "required": [
              "claim_admin_role"
            ],
            "properties": {
              "claim_admin_role": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Cancel admin role transferral",
            "type": "object",
            "required": [
              "cancel_role_transfer"
            ],
            "properties": {
              "cancel_role_transfer": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ExecuteMsg2": {
        "oneOf": [
          {
            "description": "Deposit native tokens into the vault, the sender receives the issued shares Responds with [DepositResponse]",
            "type": "object",
            "required": [
              "deposit"
            ],
            "properties": {
              "deposit": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Donate native tokens to the vault",
            "type": "object",
            "required": [
              "donate"
            ],
            "properties": {
              "donate": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Allow one party to burn shares so that another party may claim the underlying deposits",
            "type": "object",
            "required": [
              "redeem"
            ],
            "properties": {
              "redeem": {
                "type": "object",
                "required": [
                  "recipient"
                ],
                "properties": {
                  "recipient": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Attempt to start any pending unbondings",
            "type": "object",
            "required": [
              "start_unbond"
            ],
            "properties": {
              "start_unbond": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Claim any unclaimed unbonded underlying tokens belonging to the sender",
            "type": "object",
            "required": [
              "claim"
            ],
            "properties": {
              "claim": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "StrategyExecuteMsg": {
        "oneOf": [
          {
            "description": "Force a failed phase to continue to the next phase, if elligible",
            "type": "object",
            "required": [
              "force_next"
            ],
            "properties": {
              "force_next": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "reconcile"
            ],
            "properties": {
              "reconcile": {
                "type": "object",
                "properties": {
                  "fee_recipient": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "IBC hook callback for transferral of assets back to the contract",
            "type": "object",
            "required": [
              "receive_undelegated"
            ],
            "properties": {
              "receive_undelegated": {
                "type": "object",
                "required": [
                  "balance_icq_timestamp"
                ],
                "properties": {
                  "balance_icq_timestamp": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Admin role required",
            "type": "object",
            "required": [
              "redelegate_slot"
            ],
            "properties": {
              "redelegate_slot": {
                "type": "object",
                "required": [
                  "slot",
                  "validator"
                ],
                "properties": {
                  "slot": {
                    "type": "integer",
                    "format": "uint",
                    "minimum": 0.0
                  },
                  "validator": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Restore an ICA - requires submitting the registration fee Note that this will fail if the channel is open.",
            "type": "object",
            "required": [
              "restore_ica"
            ],
            "properties": {
              "restore_ica": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Restore an ICQ channel - requires submitting the deposit Note that this will fail if the channel is open.",
            "type": "object",
            "required": [
              "restore_icq"
            ],
            "properties": {
              "restore_icq": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Query the x/interchain-txs params for the max msg count and reset cached value",
            "type": "object",
            "required": [
              "reset_max_msg_count"
            ],
            "properties": {
              "reset_max_msg_count": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Admin role required",
            "type": "object",
            "required": [
              "update_config"
            ],
            "properties": {
              "update_config": {
                "type": "object",
                "properties": {
                  "estimated_block_interval_seconds": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "fee_bps_block_increment": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "fee_payment_cooldown_blocks": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "icq_update_interval": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "interchain_tx_timeout_seconds": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "max_fee_bps": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint32",
                    "minimum": 0.0
                  },
                  "transfer_in_timeout_seconds": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "transfer_out_timeout_seconds": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint64",
                    "minimum": 0.0
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "anyOf": [
      {
        "$ref": "#/definitions/QueryMsg"
      },
      {
        "$ref": "#/definitions/QueryMsg2"
      },
      {
        "$ref": "#/definitions/StrategyQueryMsg"
      }
    ],
    "definitions": {
      "QueryMsg": {
        "oneOf": [
          {
            "description": "Returns the current admin role holder",
            "type": "object",
            "required": [
              "current_admin"
            ],
            "properties": {
              "current_admin": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the pending admin role holder",
            "type": "object",
            "required": [
              "pending_admin"
            ],
            "properties": {
              "pending_admin": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "QueryMsg2": {
        "oneOf": [
          {
            "description": "Returns the state of the vault, i.e. total shares issued & total deposit value",
            "type": "object",
            "required": [
              "state"
            ],
            "properties": {
              "state": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the pending unbonding for the given address if present, otherwise the whole contract",
            "type": "object",
            "required": [
              "pending_unbonding"
            ],
            "properties": {
              "pending_unbonding": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns all the unbondings for the given address if present, otherwise the whole contract. The unbondings are in descending order according to the epoch start and will only contain up to `limit` entries, if provided",
            "type": "object",
            "required": [
              "active_unbondings"
            ],
            "properties": {
              "active_unbondings": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "limit": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint32",
                    "minimum": 0.0
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns all the unbonding log metadata for the given address",
            "type": "object",
            "required": [
              "unbonding_log_metadata"
            ],
            "properties": {
              "unbonding_log_metadata": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the current claimable balance for the address",
            "type": "object",
            "required": [
              "claimable"
            ],
            "properties": {
              "claimable": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the underlying asset decimals that the vault deposit value is denominated with",
            "type": "object",
            "required": [
              "underlying_asset_decimals"
            ],
            "properties": {
              "underlying_asset_decimals": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the asset that the vault accepts for deposit",
            "type": "object",
            "required": [
              "deposit_asset"
            ],
            "properties": {
              "deposit_asset": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the shares asset issued by the vault",
            "type": "object",
            "required": [
              "shares_asset"
            ],
            "properties": {
              "shares_asset": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "StrategyQueryMsg": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "config"
            ],
            "properties": {
              "config": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "metadata"
            ],
            "properties": {
              "metadata": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "reconcile_state"
            ],
            "properties": {
              "reconcile_state": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "validator_set"
            ],
            "properties": {
              "validator_set": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "active_unbondings": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ActiveUnbondingsResponse",
      "type": "object",
      "required": [
        "unbondings"
      ],
      "properties": {
        "unbondings": {
          "description": "The active unbondings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnbondingStatus"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        },
        "UnbondingStatus": {
          "type": "object",
          "required": [
            "amount",
            "end",
            "start"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "end": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "start": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      }
    },
    "claimable": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ClaimableResponse",
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "Amount of assets elligible for claiming",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Config",
      "type": "object",
      "required": [
        "connection_id",
        "estimated_block_interval_seconds",
        "fee_bps_block_increment",
        "fee_payment_cooldown_blocks",
        "icq_update_interval",
        "interchain_tx_timeout_seconds",
        "max_fee_bps",
        "max_unbonding_entries",
        "max_validators_per_delegations_icq",
        "remote_denom",
        "remote_denom_decimals",
        "transfer_in_channel",
        "transfer_in_timeout_seconds",
        "transfer_out_channel",
        "transfer_out_timeout_seconds",
        "unbonding_period"
      ],
      "properties": {
        "connection_id": {
          "type": "string"
        },
        "estimated_block_interval_seconds": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "fee_bps_block_increment": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "fee_payment_cooldown_blocks": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "icq_update_interval": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "interchain_tx_timeout_seconds": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "max_fee_bps": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "max_unbonding_entries": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "max_validators_per_delegations_icq": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "remote_denom": {
          "type": "string"
        },
        "remote_denom_decimals": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "transfer_in_channel": {
          "type": "string"
        },
        "transfer_in_timeout_seconds": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "transfer_out_channel": {
          "type": "string"
        },
        "transfer_out_timeout_seconds": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "unbonding_period": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "current_admin": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CurrentAdminResponse",
      "type": "object",
      "properties": {
        "current_admin": {
          "description": "The current admin, if None the contract creator is the admin",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "deposit_asset": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DepositAssetResponse",
      "type": "object",
      "required": [
        "denom"
      ],
      "properties": {
        "denom": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "metadata": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Metadata",
      "type": "object",
      "required": [
        "available_to_claim",
        "delegated",
        "delegations_icq_count",
        "delegations_icqs",
        "ibc_deposit_asset",
        "inflight_delegation",
        "inflight_deposit",
        "inflight_fee_payable",
        "inflight_rewards_receivable",
        "inflight_unbond",
        "max_ibc_msg_count",
        "minimum_unbond_interval",
        "msg_issued_count",
        "msg_success_count",
        "next_delegations_icqs",
        "pending_deposit",
        "pending_unbond",
        "total_actual_unbonded",
        "total_expected_unbonded"
      ],
      "properties": {
        "available_to_claim": {
          "$ref": "#/definitions/Uint128"
        },
        "delegated": {
          "$ref": "#/definitions/Uint128"
        },
        "delegations_icq_count": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "delegations_icqs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        "ibc_deposit_asset": {
          "type": "string"
        },
        "inflight_delegation": {
          "$ref": "#/definitions/Uint128"
        },
        "inflight_deposit": {
          "$ref": "#/definitions/Uint128"
        },
        "inflight_fee_payable": {
          "$ref": "#/definitions/Uint128"
        },
        "inflight_rewards_receivable": {
          "$ref": "#/definitions/Uint128"
        },
        "inflight_unbond": {
          "$ref": "#/definitions/Uint128"
        },
        "last_main_ica_balance_icq_update": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "last_reconcile_height": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "last_unbond_timestamp": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "main_ica_address": {
          "type": [
            "string",
            "null"
          ]
        },
        "main_ica_balance_icq": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "max_ibc_msg_count": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "minimum_unbond_interval": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "msg_issued_count": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "msg_success_count": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "next_delegations_icqs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        "pending_deposit": {
          "$ref": "#/definitions/Uint128"
        },
        "pending_unbond": {
          "$ref": "#/definitions/Uint128"
        },
        "rewards_ica_address": {
          "type": [
            "string",
            "null"
          ]
        },
        "rewards_ica_balance_icq": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "total_actual_unbonded": {
          "$ref": "#/definitions/Uint128"
        },
        "total_expected_unbonded": {
          "$ref": "#/definitions/Uint128"
        },
        "unbonding_ack_count": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "unbonding_issued_count": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "pending_admin": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PendingAdminResponse",
      "type": "object",
      "properties": {
        "pending_admin": {
          "description": "The pending admin, they will become admin if they claim the role",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "pending_unbonding": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PendingUnbondingResponse",
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "start_hint": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "reconcile_state": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ReconcileState",
      "type": "object",
      "required": [
        "cost",
        "phase",
        "state"
      ],
      "properties": {
        "cost": {
          "$ref": "#/definitions/Uint128"
        },
        "fee_recipient": {
          "type": [
            "string",
            "null"
          ]
        },
        "phase": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "trigger_address": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "shares_asset": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SharesAssetResponse",
      "type": "object",
      "required": [
        "denom"
      ],
      "properties": {
        "denom": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "state": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StateResponse",
      "type": "object",
      "required": [
        "total_deposits",
        "total_issued_shares"
      ],
      "properties": {
        "total_deposits": {
          "description": "Total amount of deposits in the vault",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "total_issued_shares": {
          "description": "Total number of issued shares",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "unbonding_log_metadata": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UnbondingLogMetadata",
      "type": "object",
      "properties": {
        "first_entered_batch": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "last_claimed_batch": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "last_committed_batch_id": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "last_entered_batch": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "underlying_asset_decimals": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UnderlyingAssetDecimalsResponse",
      "type": "object",
      "required": [
        "decimals"
      ],
      "properties": {
        "decimals": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "validator_set": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ValidatorSet",
      "type": "object",
      "required": [
        "size",
        "validators",
        "weights"
      ],
      "properties": {
        "pending_redelegate_to": {
          "type": [
            "string",
            "null"
          ]
        },
        "pending_redelegation_slot": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint",
          "minimum": 0.0
        },
        "size": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "validators": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weights": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  }
}
