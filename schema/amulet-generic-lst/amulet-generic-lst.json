{
  "contract_name": "amulet-generic-lst",
  "contract_version": "1.0.3",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "lst_decimals",
      "lst_denom",
      "lst_redemption_rate_oracle",
      "underlying_decimals"
    ],
    "properties": {
      "lst_decimals": {
        "type": "integer",
        "format": "uint32",
        "minimum": 0.0
      },
      "lst_denom": {
        "type": "string"
      },
      "lst_redemption_rate_oracle": {
        "type": "string"
      },
      "underlying_decimals": {
        "type": "integer",
        "format": "uint32",
        "minimum": 0.0
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "anyOf": [
      {
        "$ref": "#/definitions/ExecuteMsg"
      },
      {
        "$ref": "#/definitions/ExecuteMsg2"
      },
      {
        "$ref": "#/definitions/StrategyExecuteMsg"
      }
    ],
    "definitions": {
      "ExecuteMsg": {
        "oneOf": [
          {
            "description": "Transfer admin role to a new address",
            "type": "object",
            "required": [
              "transfer_admin_role"
            ],
            "properties": {
              "transfer_admin_role": {
                "type": "object",
                "required": [
                  "next_admin"
                ],
                "properties": {
                  "next_admin": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Complete admin role transferral",
            "type": "object",
            "required": [
              "claim_admin_role"
            ],
            "properties": {
              "claim_admin_role": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Cancel admin role transferral",
            "type": "object",
            "required": [
              "cancel_role_transfer"
            ],
            "properties": {
              "cancel_role_transfer": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ExecuteMsg2": {
        "oneOf": [
          {
            "description": "Deposit native tokens into the vault, the sender receives the issued shares Responds with [DepositResponse]",
            "type": "object",
            "required": [
              "deposit"
            ],
            "properties": {
              "deposit": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Donate native tokens to the vault",
            "type": "object",
            "required": [
              "donate"
            ],
            "properties": {
              "donate": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Allow one party to burn shares so that another party may claim the underlying deposits",
            "type": "object",
            "required": [
              "redeem"
            ],
            "properties": {
              "redeem": {
                "type": "object",
                "required": [
                  "recipient"
                ],
                "properties": {
                  "recipient": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Attempt to start any pending unbondings",
            "type": "object",
            "required": [
              "start_unbond"
            ],
            "properties": {
              "start_unbond": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Claim any unclaimed unbonded underlying tokens belonging to the sender",
            "type": "object",
            "required": [
              "claim"
            ],
            "properties": {
              "claim": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "StrategyExecuteMsg": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "set_redemption_rate_oracle"
            ],
            "properties": {
              "set_redemption_rate_oracle": {
                "type": "object",
                "required": [
                  "oracle"
                ],
                "properties": {
                  "oracle": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "anyOf": [
      {
        "$ref": "#/definitions/QueryMsg"
      },
      {
        "$ref": "#/definitions/QueryMsg2"
      },
      {
        "$ref": "#/definitions/StrategyQueryMsg"
      }
    ],
    "definitions": {
      "QueryMsg": {
        "oneOf": [
          {
            "description": "Returns the current admin role holder",
            "type": "object",
            "required": [
              "current_admin"
            ],
            "properties": {
              "current_admin": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the pending admin role holder",
            "type": "object",
            "required": [
              "pending_admin"
            ],
            "properties": {
              "pending_admin": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "QueryMsg2": {
        "oneOf": [
          {
            "description": "Returns the state of the vault, i.e. total shares issued & total deposit value",
            "type": "object",
            "required": [
              "state"
            ],
            "properties": {
              "state": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the pending unbonding for the given address if present, otherwise the whole contract",
            "type": "object",
            "required": [
              "pending_unbonding"
            ],
            "properties": {
              "pending_unbonding": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns all the unbondings for the given address if present, otherwise the whole contract. The unbondings are in descending order according to the epoch start and will only contain up to `limit` entries, if provided",
            "type": "object",
            "required": [
              "active_unbondings"
            ],
            "properties": {
              "active_unbondings": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "limit": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint32",
                    "minimum": 0.0
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns all the unbonding log metadata for the given address",
            "type": "object",
            "required": [
              "unbonding_log_metadata"
            ],
            "properties": {
              "unbonding_log_metadata": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the current claimable balance for the address",
            "type": "object",
            "required": [
              "claimable"
            ],
            "properties": {
              "claimable": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the underlying asset decimals that the vault deposit value is denominated with",
            "type": "object",
            "required": [
              "underlying_asset_decimals"
            ],
            "properties": {
              "underlying_asset_decimals": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the asset that the vault accepts for deposit",
            "type": "object",
            "required": [
              "deposit_asset"
            ],
            "properties": {
              "deposit_asset": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the shares asset issued by the vault",
            "type": "object",
            "required": [
              "shares_asset"
            ],
            "properties": {
              "shares_asset": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "StrategyQueryMsg": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "metadata"
            ],
            "properties": {
              "metadata": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "active_unbondings": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ActiveUnbondingsResponse",
      "type": "object",
      "required": [
        "unbondings"
      ],
      "properties": {
        "unbondings": {
          "description": "The active unbondings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnbondingStatus"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        },
        "UnbondingStatus": {
          "type": "object",
          "required": [
            "amount",
            "end",
            "start"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "end": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "start": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      }
    },
    "claimable": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ClaimableResponse",
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "Amount of assets elligible for claiming",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "current_admin": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CurrentAdminResponse",
      "type": "object",
      "properties": {
        "current_admin": {
          "description": "The current admin, if None the contract creator is the admin",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "deposit_asset": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DepositAssetResponse",
      "type": "object",
      "required": [
        "denom"
      ],
      "properties": {
        "denom": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "metadata": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MetadataResponse",
      "type": "object",
      "required": [
        "active_lst_balance",
        "claimable_lst_balance",
        "lst_decimals",
        "lst_denom",
        "lst_redemption_rate_oracle",
        "underlying_decimals"
      ],
      "properties": {
        "active_lst_balance": {
          "$ref": "#/definitions/Uint128"
        },
        "claimable_lst_balance": {
          "$ref": "#/definitions/Uint128"
        },
        "lst_decimals": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "lst_denom": {
          "type": "string"
        },
        "lst_redemption_rate_oracle": {
          "type": "string"
        },
        "underlying_decimals": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "pending_admin": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PendingAdminResponse",
      "type": "object",
      "properties": {
        "pending_admin": {
          "description": "The pending admin, they will become admin if they claim the role",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "pending_unbonding": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PendingUnbondingResponse",
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "start_hint": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "shares_asset": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SharesAssetResponse",
      "type": "object",
      "required": [
        "denom"
      ],
      "properties": {
        "denom": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "state": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StateResponse",
      "type": "object",
      "required": [
        "total_deposits",
        "total_issued_shares"
      ],
      "properties": {
        "total_deposits": {
          "description": "Total amount of deposits in the vault",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "total_issued_shares": {
          "description": "Total number of issued shares",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "unbonding_log_metadata": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UnbondingLogMetadata",
      "type": "object",
      "properties": {
        "first_entered_batch": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "last_claimed_batch": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "last_committed_batch_id": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "last_entered_batch": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "underlying_asset_decimals": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UnderlyingAssetDecimalsResponse",
      "type": "object",
      "required": [
        "decimals"
      ],
      "properties": {
        "decimals": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    }
  }
}
