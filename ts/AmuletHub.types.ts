/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  synthetic_mint: string;
}
export type ExecuteMsg = ExecuteMsg1 | ExecuteMsg2;
export type ExecuteMsg1 = {
  transfer_admin_role: {
    next_admin: string;
  };
} | {
  claim_admin_role: {};
} | {
  cancel_role_transfer: {};
};
export type ExecuteMsg2 = AdminMsg | UserMsg;
export type AdminMsg = {
  register_vault: {
    synthetic: string;
    vault: string;
  };
} | {
  set_treasury: {
    address: string;
  };
} | {
  set_deposits_enabled: {
    enabled: boolean;
    vault: string;
  };
} | {
  set_advance_enabled: {
    enabled: boolean;
    vault: string;
  };
} | {
  set_max_ltv: {
    bps: number;
    vault: string;
  };
} | {
  set_collateral_yield_fee: {
    bps: number;
    vault: string;
  };
} | {
  set_reserves_treasury_fee: {
    bps: number;
    vault: string;
  };
} | {
  set_advance_fee_recipient: {
    recipient: string;
    vault: string;
  };
} | {
  set_fixed_advance_fee: {
    bps: number;
    vault: string;
  };
} | {
  set_advance_fee_oracle: {
    oracle: string;
    vault: string;
  };
} | {
  set_amo: {
    amo: string;
    vault: string;
  };
} | {
  set_amo_allocation: {
    bps: number;
    vault: string;
  };
} | {
  set_proxy_config: {
    advance?: string | null;
    deposit?: string | null;
    mint?: string | null;
    redeem?: string | null;
    vault: string;
  };
} | {
  remove_deposit_proxy: {
    vault: string;
  };
} | {
  remove_advance_proxy: {
    vault: string;
  };
} | {
  remove_redeem_proxy: {
    vault: string;
  };
} | {
  remove_mint_proxy: {
    vault: string;
  };
};
export type UserMsg = {
  evaluate: {
    vault: string;
  };
} | {
  deposit: {
    vault: string;
  };
} | {
  deposit_on_behalf: {
    behalf_of: string;
    vault: string;
  };
} | {
  repay_underlying: {
    vault: string;
  };
} | {
  repay_synthetic: {
    vault: string;
  };
} | {
  advance: {
    amount: Uint128;
    vault: string;
  };
} | {
  advance_on_behalf: {
    amount: Uint128;
    behalf_of: string;
    vault: string;
  };
} | {
  withdraw: {
    amount: Uint128;
    vault: string;
  };
} | {
  self_liquidate: {
    vault: string;
  };
} | {
  convert_credit: {
    amount: Uint128;
    vault: string;
  };
} | {
  redeem: {
    vault: string;
  };
} | {
  redeem_on_behalf: {
    behalf_of: string;
    vault: string;
  };
} | {
  mint: {
    vault: string;
  };
} | {
  mint_on_behalf: {
    behalf_of: string;
    vault: string;
  };
} | {
  claim_treasury: {
    vault: string;
  };
} | {
  claim_amo: {
    vault: string;
  };
};
export type Uint128 = string;
export type QueryMsg = QueryMsg1 | QueryMsg2;
export type QueryMsg1 = {
  current_admin: {};
} | {
  pending_admin: {};
};
export type QueryMsg2 = {
  list_vaults: {};
} | {
  vault_metadata: {
    vault: string;
  };
} | {
  position: {
    account: string;
    vault: string;
  };
} | {
  treasury: {};
} | {
  mint: {};
};
export interface CurrentAdminResponse {
  current_admin?: string | null;
}
export interface ListVaultsResponse {
  vaults: VaultMetadata[];
}
export interface VaultMetadata {
  advance_enabled: boolean;
  advance_fee_oracle?: string | null;
  advance_fee_recipient?: string | null;
  advance_proxy?: string | null;
  amo?: string | null;
  amo_allocation: number;
  amo_shares: Uint128;
  collateral_balance: Uint128;
  collateral_shares: Uint128;
  collateral_yield_fee_bps: number;
  deposit_enabled: boolean;
  deposit_proxy?: string | null;
  fixed_advance_fee_bps: number;
  max_ltv_bps: number;
  mint_proxy?: string | null;
  redeem_proxy?: string | null;
  reserve_balance: Uint128;
  reserve_shares: Uint128;
  reserve_yield_fee_bps: number;
  sum_payment_ratio?: SumPaymentRatio | null;
  synthetic: string;
  treasury_shares: Uint128;
  vault: string;
}
export interface SumPaymentRatio {
  ratio: string;
  timestamp: number;
}
export interface MintResponse {
  mint: string;
}
export interface PendingAdminResponse {
  pending_admin?: string | null;
}
export interface PositionResponse {
  collateral: Uint128;
  credit: Uint128;
  debt: Uint128;
  sum_payment_ratio: string;
  vault_loss_detected: boolean;
}
export interface TreasuryResponse {
  treasury?: string | null;
}